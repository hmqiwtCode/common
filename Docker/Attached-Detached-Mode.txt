docker run -p 8000:80 <ImageID> => run foreground. attach mode
docker start <ImageID|| Name> => run background. detach mode.

detach mode: docker run -p 8000:80 -d <ImageID>
attch mode:  docker attach <container ID || Name>
logs info in container: docker logs <container ID || Name>
logs and follow: docker logs -f <name>
-----------------
add tag: docker tag {current-repository:current-tag} {new-repository:new-tag}
example: docker tag node-app:latest hmqcoder/first-demo-app
this will clone new images
-----------------
login: docker login
logout: docker logout
-----------------
push docker to docker-hub: docker push {your-repository}
example: docker push hmqcoder/first-demo-app
-----------------
<PULL IMAGE>
docker pull {your-repository}:{tag}
example: docker pull hmqcoder/first-demo-app
note: default tag is latest
-----------------
<VOLUMN DATA>
example: docker run -p 3000:80 -d --name c-feedback-app -v feedback:/app/feedback --rm feedback-app
-d: detach mode
--name: name container
-v: volume "feedback"
docker automatically create volume name "feedback".
/app/feedback: path inside container
--rm: removed automatically, when we stopped container
-----------------
<BIND MOUNT VOLUME>
syntax: docker run -p 3000:80 -d --name c-feedback-app -v feedback:/app/feedback -v {your-project-path}:{your-path-dir-in-container} --rm feedback-app
example: 
docker run -p 3000:80 -d --name c-feedback-app -v feedback:/app/feedback -v "/Users/vfa/Desktop/sample/Docker:/app" -v /app/node-modules --rm feedback-app
short syntax: 
  + macOS / Linux: -v $(pwd):/app
  + Windows: -v "%cd%":/app

-v /app/node-modules anonymous volume
-----------------
<REMOVE Anonymous Volumes>
docker volume rm VOL_NAME
-----------------
<DOCKER-COMPOSE>
Run docker compose file: docker-compose up
Stop: docker-compose down
Run detach mode: docker-compose up -d
Remove all volumns when down: docker-compose down -v